// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class PrzegldaniewycieczekTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void przegldaniewycieczek() {
    driver.get("http://localhost:4200//manageTrips");
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      WebElement element = driver.findElement(By.cssSelector(".mat-progress-spinner"));
      wait.until(ExpectedConditions.stalenessOf(element));
    }
    {
      List<WebElement> elements = driver.findElements(By.xpath("//button[contains(.,\'Dodaj wycieczkę add\')]"));
      assert(elements.size() > 0);
    }
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(1) > .cdk-column-beginDate")).getText(), is("2018-10-09"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(1) > .cdk-column-endDate")).getText(), is("2018-10-09"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(1) > .cdk-column-mntGroups")).getText(), is("Góry Świętokrzyskie"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(1) > .cdk-column-badgeName")).getText(), is("Popularna"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(1) > .cdk-column-status")).getText(), is("Zwer. pozytywnie"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(1) > .cdk-column-score")).getText(), is("50"));
    {
      List<WebElement> elements = driver.findElements(By.xpath("//tr[1]/td[7]/button"));
      assert(elements.size() == 0);
    }
    vars.put("currentDate", js.executeScript("var d= new Date(); var m=((d.getMonth()+1)<10)?\'0\'+(d.getMonth()+1):(d.getMonth()+1); return d.getFullYear()+\"-\"+m+\"-\"+d.getDate();"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(5) > .cdk-column-beginDate")).getText(), is("vars.get(\"currentDate\").toString()"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(5) > .cdk-column-endDate")).getText(), is("vars.get(\"currentDate\").toString()"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(5) > .cdk-column-mntGroups")).getText(), is("Tatry i Podtatrze"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(5) > .cdk-column-badgeName")).getText(), is("Mała Brązowa"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(5) > .cdk-column-status")).getText(), is("Niezweryfikowana"));
    assertThat(driver.findElement(By.cssSelector(".mat-row:nth-child(5) > .cdk-column-score")).getText(), is("8"));
    {
      List<WebElement> elements = driver.findElements(By.xpath("//tr[5]/td[7]/button"));
      assert(elements.size() > 0);
    }
  }
}
